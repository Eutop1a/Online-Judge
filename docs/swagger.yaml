basePath: /api/v1
definitions:
  controller._DeleteUserError:
    properties:
      error:
        example: delete user error
        format: string
        type: string
    type: object
  controller._DeleteUserSuccess:
    properties:
      msg:
        example: success delete user
        format: string
        type: string
    type: object
  controller._GetUserDetailError:
    properties:
      error:
        example: get user detail error
        format: string
        type: string
    type: object
  controller._GetUserDetailSuccess:
    properties:
      data:
        $ref: '#/definitions/mysql.User'
      msg:
        example: success get user detail
        format: string
        type: string
    type: object
  controller._LoginError:
    properties:
      error:
        example: invalidate email format
        format: string
        type: string
    type: object
  controller._LoginSuccess:
    properties:
      msg:
        example: login successfully
        format: string
        type: string
    type: object
  controller._RegisterError:
    properties:
      error:
        example: register error
        format: string
        type: string
    type: object
  controller._RegisterSuccess:
    properties:
      msg:
        example: registration successful
        format: string
        type: string
      token:
        example: bearer token
        format: token string
        type: string
    type: object
  controller._SendCodeError:
    properties:
      error:
        example: invalidate email format
        format: string
        type: string
    type: object
  controller._SendCodeSuccess:
    properties:
      msg:
        example: send verification code successfully
        format: string
        type: string
    type: object
  controller._UpdateUserDetailError:
    properties:
      error:
        example: update user information error
        format: string
        type: string
    type: object
  controller._UpdateUserDetailSuccess:
    properties:
      msg:
        example: success update user information
        format: string
        type: string
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  mysql.User:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      last_login_data:
        type: string
      password:
        type: string
      registration_date:
        type: string
      updatedAt:
        type: string
      user_id:
        type: integer
      user_name:
        type: string
    type: object
host: 127.0.0.1:65533
info:
  contact:
    email: support@swagger.io
    name: Eutop1a
    url: http://www.swagger.io/support
  description: Refactoring
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: online-judge
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - multipart/form-data
      description: 用户登录接口
      parameters:
      - description: 用户名
        in: formData
        name: user_name
        required: true
        type: string
      - description: 密码
        in: formData
        name: password
        required: true
        type: string
      - description: 邮箱
        in: formData
        name: email
        required: true
        type: string
      - description: 验证码
        in: formData
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功
          schema:
            $ref: '#/definitions/controller._LoginSuccess'
        "400":
          description: 用户名不存在或验证码错误
          schema:
            $ref: '#/definitions/controller._LoginError'
        "401":
          description: 验证码过期
          schema:
            $ref: '#/definitions/controller._LoginError'
        "403":
          description: 密码错误
          schema:
            $ref: '#/definitions/controller._LoginError'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controller._LoginError'
      summary: 用户登录
  /register:
    post:
      consumes:
      - multipart/form-data
      description: 用户注册接口
      parameters:
      - description: 用户名
        in: formData
        name: user_name
        required: true
        type: string
      - description: 密码
        in: formData
        name: password
        required: true
        type: string
      - description: 邮箱
        in: formData
        name: email
        required: true
        type: string
      - description: 验证码
        in: formData
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 注册成功
          schema:
            $ref: '#/definitions/controller._RegisterSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller._RegisterError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/controller._RegisterError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller._RegisterError'
      summary: 用户注册
  /send-code:
    post:
      consumes:
      - multipart/form-data
      description: 发送验证码接口
      parameters:
      - description: 邮箱
        in: formData
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 发送验证码成功
          schema:
            $ref: '#/definitions/controller._SendCodeSuccess'
        "400":
          description: 邮箱格式错误
          schema:
            $ref: '#/definitions/controller._SendCodeError'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controller._SendCodeError'
      summary: 发送验证码
  /users/{user_id}:
    delete:
      consumes:
      - multipart/form-data
      description: 删除用户接口
      parameters:
      - description: 用户ID
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            $ref: '#/definitions/controller._DeleteUserSuccess'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/controller._DeleteUserError'
        "403":
          description: 没有此用户ID
          schema:
            $ref: '#/definitions/controller._DeleteUserError'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controller._DeleteUserError'
      summary: 删除用户
    get:
      consumes:
      - multipart/form-data
      description: 获取用户详细信息接口
      parameters:
      - description: 用户ID
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            $ref: '#/definitions/controller._GetUserDetailSuccess'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/controller._GetUserDetailError'
        "403":
          description: 没有此用户ID
          schema:
            $ref: '#/definitions/controller._GetUserDetailError'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controller._GetUserDetailError'
      summary: 获取用户详细信息
    put:
      consumes:
      - multipart/form-data
      description: 更新用户详细信息接口
      parameters:
      - description: 用户ID
        in: formData
        name: user_id
        required: true
        type: string
      - description: 用户密码
        in: formData
        name: password
        type: string
      - description: 用户邮箱
        in: formData
        name: email
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            $ref: '#/definitions/controller._UpdateUserDetailSuccess'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/controller._UpdateUserDetailError'
        "403":
          description: 没有此用户ID or 验证码错误
          schema:
            $ref: '#/definitions/controller._UpdateUserDetailError'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controller._UpdateUserDetailError'
      summary: 更新用户详细信息
swagger: "2.0"
